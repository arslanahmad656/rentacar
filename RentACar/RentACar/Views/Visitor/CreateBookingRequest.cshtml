@using RentACar.Models;
@model BookingRequest

@{
    ViewBag.Title = "CreateBookingRequest";
    var errors = (List<string>)ViewBag.Errors;
    bool errorExists = errors != null;
    var vehicleCategories = (List<VehicleCategory>)ViewBag.VehicleCategories;
}

<h2>CreateBookingRequest</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.Hidden("RequestStatusId", ApplicationWideData.RequestStatusNotViewed)
    @Html.Hidden("RequestInitiated", DateTime.Now)
    
    <div class="form-horizontal">
        <h4>BookingRequest</h4>
        <hr />
        <div>
            <p>
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            </p>
            @if (errorExists)
            {
                <ul class="text-danger">
                    @foreach (var error in errors)
                    {
                        <li>
                            @error
                        </li>
                    }
                </ul>
            }
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LocationId, "LocationId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LocationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SubLocationId, "SubLocationId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SubLocationId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RequestDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RequestDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RequestDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Select Vehicle Type</label>
            <div class="col-md-10">
                <select class="form-control" id="vehicleCategory">
                    @{ 
                        bool first = true;
                    }
                    @foreach (var item in vehicleCategories)
                    {
                        if(first)
                        {
                            <option selected value="@item.Id">@item.Title</option>
                            first = false;
                        }
                        else
                        {
                            <option value="@item.Id">@item.Title</option>
                        }
                    }
                </select>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VehicleId, "VehicleId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VehicleId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VehicleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WithDriver, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.WithDriver)
                    @Html.ValidationMessageFor(model => model.WithDriver, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMethodId, "PaymentMethodId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PaymentMethodId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PaymentMethodId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts{

    <script>

        (function removeAllCarsOnFirstLoad() {
            $('#VehicleId').html('<option selected value>Select a category first</option>');
        })();

        (function selectCarsInCategory() {
            function loadCars() {
                var categoryId = Number($('#vehicleCategory').val().trim());
                $.ajax({
                    url: '@Url.Action("GetVehiclesInCategory")',
                    data: {
                        'categoryId': categoryId
                    },
                    type: 'GET',
                    success: function (data) {
                        console.log(data);
                        if (data['exceptionOccurred'] === false) {
                            if (data['vehicleCount'] !== 0) {
                                let html = '';
                                let first = true;
                                let vehicles = data['vehicles'];
                                for (let vehicle of data['vehicles']) {
                                    if (first) {
                                        html += '<option selected value="' + vehicle['id'] + '">' + vehicle['title'] + '</option>';
                                        first = false;
                                    } else {
                                        html += '<option value="' + vehicle['id'] + '">' + vehicle['title'] + '</option>';
                                    }
                                }
                                $('#VehicleId').html(html);
                            } else {
                                $('#VehicleId').html('<option selected value>No vehicles found</option>');
                            }
                        } else {
                            console.log('There was an error at server side during fetching the vehicles for the category.');
                        }
                    }
                });
            }

            $('#vehicleCategory').change(loadCars);
            loadCars(); // run this one time so that at first page load the vehicles are selected in the default selected category
        })();

    </script>

}
